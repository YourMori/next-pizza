generator Client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullname String
  email String @unique
  password String
  role UserRole @default(USER)
  verified DateTime

  provider String?
  providerId String?

  cart Cart?
  order Order[]
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  token String
  totalAmount Int @default(0)

  user User? @relation(fields: [userId], references: [id])
  userId Int? @unique

  items CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  quantity Int

  productItem ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())

  name String @unique

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())

  name String
  imageUrl String

  ingredients Ingredient[]
  items ProductItem[]
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductItem {
  id Int @id @default(autoincrement())

  price Int
  size Int?
  pizzaType Int?

  cartItems CartItem[]
  product Product @relation(fields: [productId], references: [id])
  productId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id Int @id @default(autoincrement())

  name String
  price Int
  imageUrl String

  cartItems CartItem[]
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  token String
  totalAmount String
  paymentId String?
  status OrderStatus
  
  items Json

  fullName String
  email String
  phone String
  address String
  comment String?

  user User? @relation(fields: [userId], references: [id])
  userId Int? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  code String
  
  user User @relation(fields: [userId], references: [id])
  userId Int @unique

  createdAt DateTime @default(now())

  @@unique([code, userId])
}

enum OrderStatus {
  PENDING
  SUCCESSED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}